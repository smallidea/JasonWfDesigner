<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:JasonWfDesigner.WPF.ViewModels"
                    xmlns:converters="clr-namespace:JasonWfDesigner.Core.Converters;assembly=JasonWfDesigner.Core">

    <converters:EnumerableNullReplaceConverter x:Key="EnumerableNullReplaceConverter" />
    <converters:NullReplaceConverter x:Key="NullReplaceConverter" />

    <!-- DataTemplate for DesignerCanvas look and feel -->
    <DataTemplate DataType="{x:Type viewModels:NodeDesignerItemViewModel}">
        <Grid x:Name="grid" ToolTip="{Binding Desc}">
            <Border BorderBrush="#FF000000" Background="{Binding BackgroupColor}" BorderThickness="1"
                    IsHitTestVisible="False">
                <!--<TextBlock Text="{Binding Desc}" Margin="2"
                           FontSize="8"
                           LineHeight="12" LineStackingStrategy="BlockLineHeight" Background="Transparent" />-->
            </Border>

            <Label Margin="0" TabIndex="100"
                   HorizontalAlignment="Left" 
                   FontWeight="Bold" FontSize="10" 
                   Opacity="0.8"
                   BorderThickness="1" VerticalAlignment="Top" 
                   Width="{Binding Width, ElementName=grid}" Height="{Binding Height, ElementName=grid}" >
                <TextBlock Text="{Binding Header}" TextWrapping="Wrap"></TextBlock>
            </Label>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <Button
                    Margin="5"
                    Template="{StaticResource infoButtonTemplate}"
                    Command="{Binding ShowDataChangeWindowCommand}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- DataTemplate for Popup look and feel -->
    <DataTemplate DataType="{x:Type viewModels:NodeDesignerItemData}">
        <TabControl Margin="0,5,0,0">

            <TabItem Header="配置">
                <Grid>
                    <StackPanel Orientation="Vertical" Margin="0,10" HorizontalAlignment="Stretch"> 

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,5" Visibility="{Binding HasBusinessObj}">
                            <Label Content="业务对象"  Width="65"/>
                            <ComboBox Width="130" Margin="5"
                                  SelectedItem="{Binding BusinessObj, Mode=TwoWay}"
                                  ItemsSource="{Binding BusinessObjCollection, Mode=OneWay}">
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,5">
                            <Label Content="节点类型" Width="65" />
                            <ComboBox Width="130" Margin="5" SelectedItem="{Binding NodeType}"
                                      ItemsSource="{Binding NodeTypeCollection, Mode=OneWay}">
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                    Margin="0,5">
                            <Label Content="描   述"  Width="65"/>
                            <TextBox HorizontalAlignment="Left"
                                     Text="{Binding Desc, Mode=TwoWay}"
                                     Width="130"
                                     Margin="5" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,5">
                            <Label Content="状态值"  Width="65"/>
                            <TextBox HorizontalAlignment="Left"
                                     Text="{Binding Value, Mode=TwoWay}"
                                     Width="130"
                                     Margin="5" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,5">
                            <Label Content="编   码"  Width="65"/>
                            <TextBox HorizontalAlignment="Left"
                                     Text="{Binding Key, Mode=TwoWay}"
                                     Width="130"
                                     Margin="5" />
                        </StackPanel>

                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
        <!--
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical" Margin="0,10" HorizontalAlignment="Stretch">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,5">
                    <Label Content="滚筒编号" />
                    <TextBox HorizontalAlignment="Left"
                             Text="{Binding Key}"
                             Width="150"
                             Margin="5" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5">
                    <Label Content="是否启用" />
                    <CheckBox IsChecked="{Binding IsEnabled}" VerticalAlignment="Stretch" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5">
                    <Label Content="进入触发" />
                    <ComboBox  MinWidth="100"                   
                   DisplayMemberPath="Name" 
                   ItemsSource="{x:Static static:StaticDatas.Communications}"
                   SelectedValue="{Binding Path=InTrigger, Mode=TwoWay}"
                               />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5">
                    <Label Content="准备离开" />
                    <ComboBox  MinWidth="100" 
                               DisplayMemberPath="Name"
                               SelectedItem="{Binding Path=BeginOutTrigger}" 
                               ItemsSource="{Binding Source={x:Static static:StaticDatas.Communications}}"    
                    />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5">
                    <Label Content="离开触发" />
                    <ComboBox  MinWidth="100" 
                     DisplayMemberPath="Name"
                     SelectedItem="{Binding Path=OutTrigger}" 
                     ItemsSource="{Binding Source={x:Static static:StaticDatas.Communications}}"    
                     />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5">
                    <Label Content="空闲触发" />
                    <ComboBox  MinWidth="100" 
                               DisplayMemberPath="Name"
                               SelectedItem="{Binding Path=FreeTrigger}" 
                               ItemsSource="{Binding Source={x:Static static:StaticDatas.Communications}}"    
                    />
                </StackPanel>

            </StackPanel>
        </Grid>
-->
    </DataTemplate>

    <!--    <Style x:Key="ComboBoxSelectOverlay" TargetType="TextBlock">
        <Setter Property="Grid.ZIndex" Value="10"/>
        <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
        <Setter Property="Margin" Value="6,4,10,0"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

</ResourceDictionary>